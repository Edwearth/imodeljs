{
  "$schema": "../../node_modules/@bentley/presentation-common/Ruleset.schema.json",
  "id": "VisibilityWidget.ModelsTree_test",
  "supportedSchemas": {
    "schemaNames": [
      "BisCore"
    ]
  },
  "rules": [
    {
      "ruleType": "RootNodes",
      "autoExpand": true,
      "specifications": [
        {
          "specType": "InstanceNodesOfSpecificClasses",
          "classes": [
            {
              "schemaName": "BisCore",
              "classNames": [
                "Subject"
              ]
            }
          ],
          "instanceFilter": "this.Parent = NULL OR this.ECInstanceId = 1",
          "arePolymorphic": false,
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "customizationRules": [
        {
          "ruleType": "ExtendedData",
          "items": {
            "isSubject": "true"
          }
        }
      ]
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"Subject\", \"BisCore\")",
      "specifications": [
        {
          "specType": "RelatedInstanceNodes",
          "relationshipPaths": [
            {
              "relationship": {
                "schemaName": "BisCore",
                "className": "SubjectOwnsSubjects"
              },
              "direction": "Forward",
              "targetClass": {
                "schemaName": "BisCore",
                "className": "Subject"
              }
            }
          ],
          "instanceFilter": "json_extract(this.JsonProperties, \"$.Subject.Job.Bridge\") <> NULL OR ifnull(json_extract(this.JsonProperties, \"$.Subject.Model.Type\"), \"\") = \"Hierarchy\"",
          "hideNodesInHierarchy": true,
          "groupByClass": false,
          "groupByLabel": false
        },
        {
          "specType": "RelatedInstanceNodes",
          "relationshipPaths": [
            {
              "relationship": {
                "schemaName": "BisCore",
                "className": "SubjectOwnsSubjects"
              },
              "direction": "Forward",
              "targetClass": {
                "schemaName": "BisCore",
                "className": "Subject"
              }
            }
          ],
          "instanceFilter": "json_extract(this.JsonProperties, \"$.Subject.Job.Bridge\") = NULL AND ifnull(json_extract(this.JsonProperties, \"$.Subject.Model.Type\"), \"\") <> \"Hierarchy\"",
          "hideIfNoChildren": false,
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "customizationRules": [
        {
          "ruleType": "ExtendedData",
          "items": {
            "isSubject": "true"
          }
        }
      ]
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"Subject\", \"BisCore\")",
      "specifications": [
        {
          "specType": "InstanceNodesOfSpecificClasses",
          "classes": {
            "schemaName": "GeotechnicalInterpretation",
            "classNames": [
              "GeotechnicalInterpretationModel"
            ]
          },
          "arePolymorphic": true,
          "relatedInstances": [
            {
              "relationshipPath": {
                "relationship": {
                  "schemaName": "BisCore",
                  "className": "ModelModelsElement"
                },
                "direction": "Forward",
                "targetClass": {
                  "schemaName": "GeotechnicalInterpretation",
                  "className": "GeotechnicalInterpretationPartition"
                }
              },
              "alias": "partition",
              "isRequired": true
            }
          ],
          "instanceFilter": "(parent.ECInstanceId = partition.Parent.Id OR json_extract(parent.JsonProperties, \"$.Subject.Model.TargetPartition\") = printf(\"0x%x\", partition.ECInstanceId)) AND NOT this.IsPrivate AND json_extract(partition.JsonProperties, \"$.PhysicalPartition.Model.Content\") = NULL",
          "hasChildren": "Always",
          "groupByClass": false,
          "groupByLabel": false
        },
        {
          "specType": "InstanceNodesOfSpecificClasses",
          "classes": {
            "schemaName": "GeotechnicalInterpretation",
            "classNames": [
              "GeotechnicalInterpretationModel"
            ]
          },
          "arePolymorphic": true,
          "relatedInstances": [
            {
              "relationshipPath": {
                "relationship": {
                  "schemaName": "BisCore",
                  "className": "ModelModelsElement"
                },
                "direction": "Forward",
                "targetClass": {
                  "schemaName": "GeotechnicalInterpretation",
                  "className": "GeotechnicalInterpretationPartition"
                }
              },
              "alias": "partition",
              "isRequired": true
            }
          ],
          "instanceFilter": "(parent.ECInstanceId = partition.Parent.Id OR json_extract(parent.JsonProperties, \"$.Subject.Model.TargetPartition\") = printf(\"0x%x\", partition.ECInstanceId)) AND NOT this.IsPrivate AND json_extract(partition.JsonProperties, \"$.PhysicalPartition.Model.Content\") <> NULL",
          "hideNodesInHierarchy": true,
          "hasChildren": "Always",
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "customizationRules": [
        {
          "ruleType": "ExtendedData",
          "items": {
            "isInterpretationPartition": "true"
          }
        }
      ]
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"GeotechnicalInterpretationModel\", \"GeotechnicalInterpretation\")",
      "specifications": [
        {
          "specType": "InstanceNodesOfSpecificClasses",
          "classes": {
            "schemaName": "GeotechnicalInterpretation",
            "classNames": [
              "Interpretation"
            ]
          },
          "relatedInstances": [
            {
              "relationshipPath": {
                "relationship": {
                  "schemaName": "BisCore",
                  "className": "ModelContainsElements"
                },
                "direction": "Forward",
                "targetClass": {
                  "schemaName": "GeotechnicalInterpretation",
                  "className": "Interpretation"
                }
              },
              "alias": "interpretation",
              "isRequired": true
            }
          ],
          "instanceFilter": "interpretation.Model.Id = parent.ECInstanceId",
          "hideNodesInHierarchy": true,
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "customizationRules": [
        {
          "ruleType": "ExtendedData",
          "items": {
            "isInterpretation": "true"
          }
        }
      ]
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"Interpretation\", \"GeotechnicalInterpretation\")",
      "specifications": [
        {
          "specType": "InstanceNodesOfSpecificClasses",
          "classes": {
            "schemaName": "GeotechnicalInterpretation",
            "classNames": [
              "Borehole"
            ]
          },
          "relatedInstances": [
            {
              "relationshipPath": [
                {
                  "relationship": {
                    "schemaName": "BisCore",
                    "className": "ModelModelsElement"
                  },
                  "direction": "Backward",
                  "targetClass": {
                    "schemaName": "GeotechnicalInterpretation",
                    "className": "GeotechnicalInterpretationModel"
                  }
                }
              ],
              "alias": "interpretation",
              "isRequired": false
            }
          ],
          "hideNodesInHierarchy": false,
          "groupByClass": false,
          "groupByLabel": false
        }
      ],
      "customizationRules": [
        {
          "ruleType": "ExtendedData",
          "items": {
            "isModel": "true"
          }
        }
      ]
    },
    {
      "ruleType": "ChildNodes",
      "condition": "ParentNode.IsOfClass(\"Borehole\", \"GeotechnicalInterpretation\")",
      "specifications": [
        {
          "specType": "InstanceNodesOfSpecificClasses",
          "classes": {
            "schemaName": "GeotechnicalInterpretation",
            "classNames": [
              "MaterialDepthRange"
            ]
          },
          "relatedInstances": [
            {
              "relationshipPath": {
                "relationship": {
                  "schemaName": "GeotechnicalInterpretation",
                  "className": "BoreholeOwnsMaterialDepthRanges"
                },
                "direction": "Backward",
                "targetClass": {
                  "schemaName": "GeotechnicalInterpretation",
                  "className": "Borehole"
                }
              },
              "alias": "borehole",
              "isRequired": true
            }
          ],
          "instanceFilter": "borehole.ECInstanceId = parent.ECInstanceId",
          "hideNodesInHierarchy": false,
          "groupByClass": false,
          "groupByLabel": false
        }
      ]
    },
    {
      "ruleType": "ImageIdOverride",
      "condition": "ThisNode.IsOfClass(\"Subject\", \"BisCore\")",
      "imageIdExpression": "IIF(this.Parent.Id = NULL, \"icon-imodel-hollow-2\", \"icon-folder\")"
    },
    {
      "ruleType": "ImageIdOverride",
      "condition": "ThisNode.IsOfClass(\"Model\", \"BisCore\")",
      "imageIdExpression": "\"icon-model\""
    },
    {
      "ruleType": "ImageIdOverride",
      "condition": "ThisNode.IsOfClass(\"Element\", \"BisCore\")",
      "imageIdExpression": "\"icon-item\""
    }
  ]
}